name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string
      release_notes:
        description: 'Release notes'
        required: false
        type: string
        default: 'See CHANGELOG.md for details'

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for changelog
    
    - name: Validate version format
      run: |
        if ! [[ "${{ github.event.inputs.version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Version must be in format vX.Y.Z (e.g., v1.0.0)"
          exit 1
        fi
    
    - name: Check if tag exists
      run: |
        if git rev-parse "${{ github.event.inputs.version }}" >/dev/null 2>&1; then
          echo "Error: Tag ${{ github.event.inputs.version }} already exists"
          exit 1
        fi
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
        if [ -n "$PREV_TAG" ]; then
          echo "Previous tag: $PREV_TAG"
          CHANGELOG=$(git log --pretty=format:"- %s (%an)" $PREV_TAG..HEAD | grep -v "Merge pull request")
        else
          echo "No previous tag found, including all commits"
          CHANGELOG=$(git log --pretty=format:"- %s (%an)" | head -20)
        fi
        
        # Save changelog to file for the release
        echo "## What's Changed" > release_notes.md
        echo "" >> release_notes.md
        echo "$CHANGELOG" >> release_notes.md
        echo "" >> release_notes.md
        echo "---" >> release_notes.md
        echo "${{ github.event.inputs.release_notes }}" >> release_notes.md
    
    - name: Create and push tag
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -a ${{ github.event.inputs.version }} -m "Release ${{ github.event.inputs.version }}"
        git push origin ${{ github.event.inputs.version }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Release ${{ github.event.inputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        generate_release_notes: true
    
    - name: Trigger deployment
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: deploy-release
        client-payload: '{"version": "${{ github.event.inputs.version }}", "environment": "production"}'

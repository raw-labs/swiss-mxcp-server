name: Deploy to AWS App Runner

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  AWS_REGION: eu-west-1
  AWS_ACCOUNT_ID: 684130658470
  ECR_REPOSITORY: swiss-mxcp-server
  APP_RUNNER_SERVICE: swiss-mxcp-server

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    outputs:
      aws-creds-configured: ${{ steps.check-aws.outputs.configured }}
    steps:
      - id: check-aws
        run: |
          if [[ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" ]] && [[ -n "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]]; then
            echo "configured=true" >> $GITHUB_OUTPUT
          else
            echo "configured=false" >> $GITHUB_OUTPUT
            echo "⚠️ AWS credentials not configured. Please add AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY to repository secrets."
          fi

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GH_PAT }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r exec/aws-apprunner/requirements.txt
        # Install any additional dependencies that might be needed for evals
        pip install openai tiktoken
    
    - name: Run tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CI: true
      run: |
        chmod +x scripts/run_tests.sh
        ./scripts/run_tests.sh

  deploy:
    needs: [check-secrets, test]
    if: needs.check-secrets.outputs.aws-creds-configured == 'true'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GH_PAT }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Set up environment
      run: |
        # Make scripts executable
        chmod +x exec/aws-apprunner/*.sh
        chmod +x exec/aws-apprunner/shared-scripts/scripts/*.sh || true
        
        # Export AWS path for scripts (GitHub Actions uses different path)
        echo "AWS_CLI_PATH=aws" >> $GITHUB_ENV
        
        # Create .env file with AWS account ID
        echo "AWS_ACCOUNT_ID=${{ env.AWS_ACCOUNT_ID }}" > exec/aws-apprunner/.env
    
    - name: Build and push Docker image
      run: |
        cd exec/aws-apprunner
        ./shared-scripts/scripts/build-and-push.sh "${{ github.sha }}"
    
    - name: Deploy App Runner service
      run: |
        cd exec/aws-apprunner
        ./shared-scripts/scripts/deploy-service.sh "${{ github.sha }}"
    
    - name: Monitor deployment
      run: |
        cd exec/aws-apprunner
        ./shared-scripts/scripts/monitor-deployment.sh
    
    - name: Test deployment
      run: |
        cd exec/aws-apprunner
        ./shared-scripts/scripts/test-remote-service.sh
    
    - name: Deployment summary
      if: always()
      run: |
        cd exec/aws-apprunner
        source project-config.sh
        
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Service**: $SERVICE_NAME" >> $GITHUB_STEP_SUMMARY
        echo "- **Region**: $AWS_REGION" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ github.event.inputs.environment || 'production' }}" >> $GITHUB_STEP_SUMMARY
        
        # Get service URL if deployment succeeded
        if SERVICE_URL=$(get_service_url 2>/dev/null); then
          echo "- **Service URL**: https://$SERVICE_URL" >> $GITHUB_STEP_SUMMARY
          echo "- **MCP Endpoint**: https://$SERVICE_URL/mcp" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
